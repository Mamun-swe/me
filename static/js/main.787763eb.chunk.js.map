{"version":3,"sources":["components/Sidemenu.js","pages/Home.js","pages/About.js","pages/Url.js","pages/Projects.js","pages/Experience.js","pages/Master.js","pages/Admin/Login.js","pages/Admin/Dashboard.js","pages/Admin/Edit.js","App.js","serviceWorker.js","index.js"],"names":["Sidemenu","className","type","onClick","$","addClass","id","removeClass","exact","to","activeClassName","Home","About","myUrl","Projects","useState","projects","setProjects","loading","setLoading","useEffect","fetchData","axios","get","URL","then","res","data","role","map","project","i","key","name","href","repo_link","class","live_link","Experience","Master","path","component","Login","props","useForm","register","handleSubmit","errors","faild","setFailed","onSubmit","post","status","token","localStorage","setItem","history","push","email","message","ref","required","pattern","value","password","minLength","Dashboard","show","setShow","length","header","headers","Authorization","getItem","clear","catch","err","response","_id","delete","console","log","deleteProject","Modal","onHide","backdrop","keyboard","centered","Header","closeButton","Title","Body","framework","defaultValue","Edit","setData","fetchProject","match","params","put","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.787763eb.chunk.js","sourcesContent":["import React from 'react';\nimport \"./menu.css\";\nimport $ from 'jquery';\nimport { NavLink } from 'react-router-dom';\n\nconst Sidemenu = () => {\n\n    const openMenu = () => {\n        $(\"#mobile_menu\").addClass('active_menu')\n    }\n\n    const closeMenu = () => {\n        $(\"#mobile_menu\").removeClass('active_menu')\n    }\n\n    return (\n        <div className=\"side-menu\">\n\n            {/* Mobile Nav */}\n            <div className=\"mobile-nav d-lg-none\">\n                <button type=\"button\" className=\"btn rounded-0 shadow-none float-right p-0 menu_open_btn\" onClick={openMenu}>\n                    <div className=\"line\"></div>\n                    <div className=\"line\"></div>\n                    <div className=\"line mb-0\"></div>\n                </button>\n            </div>\n            <div className=\"break d-lg-none\"></div>\n\n            {/* Mobile Menu */}\n            <div className=\"mobile-menu d-lg-none\" id=\"mobile_menu\">\n                <button type=\"button\" className=\"btn rounded-0 shadow-none float-right p-0 menu_close_btn\" onClick={closeMenu}>\n                    <div className=\"line line_1\"></div>\n                    <div className=\"line line_2\"></div>\n                </button>\n\n                <div className=\"links text-center\">\n                    <NavLink exact to=\"/\" activeClassName=\"is-active\">Home</NavLink>\n                    <NavLink exact to=\"/about\" activeClassName=\"is-active\">About</NavLink>\n                    <NavLink exact to=\"/projects\" activeClassName=\"is-active\">Projects</NavLink>\n                    <NavLink exact to=\"/experience\" activeClassName=\"is-active\">Experience</NavLink>\n                </div>\n            </div>\n\n            <div className=\"items d-none d-lg-block\">\n                <NavLink exact to=\"/\" activeClassName=\"is-active\">Home</NavLink>\n                <NavLink exact to=\"/about\" activeClassName=\"is-active\">About</NavLink>\n                <NavLink exact to=\"/projects\" activeClassName=\"is-active\">Projects</NavLink>\n                <NavLink exact to=\"/experience\" activeClassName=\"is-active\">Experience</NavLink>\n            </div>\n        </div>\n    );\n};\n\nexport default Sidemenu;","import React from 'react';\nimport './style.css';\n\nconst Home = () => {\n    return (\n        <div className=\"home\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <h1 className=\"text-uppercase name\">abdullah al mamun</h1>\n                        <h1 className=\"text-uppercase title\">javascript developer</h1>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","import React from 'react';\nimport './style.css';\n\nconst About = () => {\n    return (\n        <div className=\"about\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-right\">\n                        <h1 className=\"text-uppercase name\">about me</h1>\n                        <h1 className=\"text-uppercase title\">software engineer</h1>\n                        <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a type specimen book. Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default About;","\nconst myUrl = \"https://portfolio-backend-app.herokuapp.com/api/\"\nexport default myUrl","import React, { useState, useEffect } from 'react';\nimport './style.css';\nimport axios from 'axios';\nimport URL from './Url';\n\nconst Projects = () => {\n    const [projects, setProjects] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        fetchData()\n    }, [])\n\n    // Fetch Projects\n    const fetchData = () => {\n        setLoading(true)\n        axios.get(`${URL}project`)\n            .then(res => {\n                setProjects(res.data.projects)\n                setLoading(false)\n            })\n    }\n\n    return (\n        <div className=\"projects about\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-right\">\n                        <h1 className=\"text-uppercase name\">work</h1>\n                        <h1 className=\"text-uppercase title\">projects</h1>\n                    </div>\n                </div>\n\n                {/* Projects */}\n                {loading ?\n\n                    <div className=\"text-center\">\n                        <div className=\"spinner-border text-white\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </div>\n                    </div>\n                    :\n                    <div className=\"row\">\n                        <div className=\"col-12 mb-4\">\n                            {projects.map((project, i) =>\n                                <div className=\"card project-card\" key={i}>\n                                    <div className=\"card-body\">\n                                        <h3>{project.name}</h3>\n                                        <p>Entirely works on the client-side, behaves like actual micro blog, everything handled by client</p>\n\n                                        <div className=\"d-flex\">\n                                            <div><a href={project.repo_link} className=\"btn btn-sm shadow-none\"><i class=\"fab fa-github text-muted\"></i></a></div>\n                                            <div className=\"pl-1\">\n                                                <a href={project.live_link} className=\"btn btn-sm shadow-none\"><i class=\"fas fa-link text-muted\"></i></a>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n\n                        <div className=\"col-12 text-center pt-4 pb-5\">\n                            <a href=\"https://github.com/Mamun-swe?tab=repositories\"\n                                type=\"button\"\n                                className=\"btn shadow-none show-more-btn\">Show More</a>\n                        </div>\n                    </div>\n                }\n\n\n            </div>\n        </div>\n    );\n};\n\nexport default Projects;","import React from 'react';\nimport './style.css';\n\nconst Experience = () => {\n    return (\n        <div className=\"experience about\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-right\">\n                        <h1 className=\"text-uppercase name\">job</h1>\n                        <h1 className=\"text-uppercase title\">experience</h1>\n                        <br />\n                        <div className=\"jobs\">\n\n                            {/* Job */}\n                            <div className=\"job mb-5\">\n                                <h3 className=\"mb-0 text-capitalize\">Hear Us Project Inc. NFP</h3>\n                                <h4 className=\"text-capitalize mb-0\">software developer</h4>\n                                <p className=\"text-capitalize mb-0\">Greater Chicago Area, USA</p>\n                                <p>4 AUG, 2020 - Present</p>\n                            </div>\n\n                            <div className=\"job mb-5\">\n                                <h3 className=\"mb-0 text-capitalize\">Dhaka Boss</h3>\n                                <h4 className=\"text-capitalize mb-0\">Backend developer</h4>\n                                <p className=\"text-capitalize mb-0\">Mirpur DOHS, Dhaka</p>\n                            </div>\n\n                            <div className=\"job mb-5\">\n                                <h3 className=\"mb-0 text-capitalize\">Web Cloudex</h3>\n                                <h4 className=\"text-capitalize mb-0\">software developer</h4>\n                                <p className=\"text-capitalize mb-0\">Mirpur DOHS, Dhaka</p>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Experience;","import React from 'react';\n\n\nimport SideMenu from '../components/Sidemenu';\nimport Home from '../pages/Home';\nimport About from '../pages/About';\nimport Projects from '../pages/Projects';\nimport Experience from '../pages/Experience';\nimport { Switch, Route } from 'react-router-dom';\n\nconst Master = () => {\n    return (\n        <div className=\"master main\">\n            <SideMenu />\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/projects\" component={Projects} />\n                <Route exact path=\"/experience\" component={Experience} />\n            </Switch>\n        </div>\n    );\n};\n\nexport default Master;","import React, { useState } from 'react';\nimport './style.css';\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport URL from '../Url';\n\nconst Login = (props) => {\n    const { register, handleSubmit, errors } = useForm();\n    const [loading, setLoading] = useState(false)\n    const [faild, setFailed] = useState(false)\n\n    const onSubmit = data => {\n        setLoading(true)\n        axios.post(`${URL}login`, data)\n            .then(res => {\n                if (res.status === 200 && res.data.token) {\n                    setLoading(false)\n                    localStorage.setItem('access_token', res.data.token)\n                    props.history.push('/dashboard')\n                }\n                if (res.status === 204) {\n                    setFailed(true)\n                    setLoading(false)\n                }\n            })\n    }\n\n    return (\n        <div className=\"login\">\n            <div className=\"flex-center flex-column\">\n                <div className=\"card border-0\">\n                    <div className=\"card-header p-4 text-center\">\n                        <h4 className=\"mb-0\"><b>Login</b></h4>\n                        {faild ? (\n                            <p className=\"text-white mb-0\">E-mail or Password incorrect.</p>\n                        ) : null}\n                    </div>\n                    <div className=\"card-body p-4 pb-lg-5\">\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            {/* E-mail */}\n                            <div className=\"form-group mb-3\">\n                                {errors.email && errors.email.message ? (\n                                    <small className=\"text-danger\">{errors.email && errors.email.message}</small>\n                                ) : <small>E-mail</small>\n                                }\n                                <input\n                                    type=\"text\"\n                                    name=\"email\"\n                                    className=\"form-control shadow-none\"\n                                    ref={register({\n                                        required: \"E-mail is required\",\n                                        pattern: {\n                                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                            message: \"Invalid email address\"\n                                        }\n                                    })}\n                                />\n                            </div>\n\n                            {/* Password */}\n                            <div className=\"form-group mb-4\">\n                                {errors.password && errors.password.message ? (\n                                    <small className=\"text-danger\">{errors.password && errors.password.message}</small>\n                                ) : <small>Password</small>\n                                }\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    className=\"form-control shadow-none\"\n                                    ref={register({\n                                        minLength: {\n                                            value: 8,\n                                            message: \"Please enter minimum 8 characters\",\n                                        },\n                                        required: \"Please enter password\",\n                                    })}\n                                />\n                            </div>\n\n                            <button type=\"submit\" className=\"btn btn-block shadow-none btn-dark\">\n                                {loading ? (\n                                    <p className=\"mb-0\"><i className=\"fa fa-spinner text-white mr-2 fa-spin\"></i>Loading ...</p>\n                                ) : <p className=\"mb-0\">Submit</p>\n                                }\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport './style.css';\nimport axios from 'axios';\nimport Modal from 'react-bootstrap/Modal';\nimport { useForm } from \"react-hook-form\";\nimport URL from '../Url';\nimport { Link } from 'react-router-dom';\n\nconst Dashboard = (props) => {\n    const { register, handleSubmit, errors } = useForm();\n    const [show, setShow] = useState(false);\n    const [projects, setProjects] = useState([]);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [loading, setLoading] = useState(false);\n\n\n    useEffect(() => {\n        fetchData()\n    }, [])\n\n    // Fetch Projects\n    const fetchData = () => {\n        axios.get(`${URL}project`)\n            .then(res => {\n                setProjects(res.data.projects)\n            })\n    }\n\n    // Submit Project\n    const onSubmit = data => {\n        // Header \n        const header = {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\n            }\n        }\n        setLoading(true)\n        axios.post(`${URL}project`, data, header)\n            .then(res => {\n                if (res.status === 201) {\n                    fetchData()\n                    setLoading(false)\n                    setShow(false)\n                }\n            })\n            .catch(err => {\n                if (err) {\n                    console.log(err)\n                }\n            })\n    }\n\n    // Delete Project\n    const deleteProject = (data) => {\n        // Header \n        const header = {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\n            }\n        }\n        axios.delete(`${URL}project/${data}`, header)\n            .then(res => {\n                if (res.status === 200) {\n                    fetchData()\n                }\n            })\n            .catch(err => {\n                if (err) {\n                    console.log(err)\n                }\n            })\n    }\n\n    // Logout\n    const logout = () => {\n        // Header \n        const header = {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\n            }\n        }\n\n        axios.get(URL + \"logout\", header)\n            .then(res => {\n                if (res.status === 200) {\n                    localStorage.clear()\n                    props.history.push('/')\n                }\n            })\n            .catch(err => {\n                if (err.response.status === 401) {\n                    localStorage.clear()\n                    props.history.push('/')\n                }\n            })\n    }\n\n\n    return (\n        <div className=\"dashboard\">\n            <div className=\"container py-4 py-lg-5\">\n                <div className=\"row\">\n\n                    <div className=\"col-12 mb-4\">\n                        <div className=\"d-flex\">\n                            <div><h1 className=\"mb-0\">Website - {projects.length}</h1></div>\n                            <div className=\"ml-auto\">\n                                <button type=\"button\" className=\"btn shadow-none\" onClick={handleShow}><i className=\"fas fa-plus\"></i></button>\n                                <button type=\"button\" className=\"btn shadow-none logout_btn\" onClick={logout}><i className=\"fas fa-power-off\"></i></button>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Projects */}\n                    <div className=\"col-12\">\n\n                        {projects.map((project, i) =>\n                            <div className=\"project p-2\" key={i}>\n                                <p className=\"mb-0 text-capitalize\">{project.name}</p>\n                                <div className=\"buttons\">\n                                    <Link to={`edit/${project._id}`} type=\"button\" className=\"btn rounded-0 shadow-none border-0\">\n                                        <i className=\"fas fa-pen\"></i>\n                                    </Link>\n                                    <button type=\"button\" className=\"btn rounded-0 shadow-none border-0\" onClick={() => deleteProject(project._id)}>\n                                        <i className=\"fas fa-trash\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        )}\n\n                    </div>\n                </div>\n            </div>\n\n\n            {/* Modal */}\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n                centered\n                className=\"project_modal\"\n            >\n                <Modal.Header closeButton className=\"px-lg-5 pt-lg-5\">\n                    <Modal.Title>add new project</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"pb-5 px-lg-5\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <div className=\"form-group mb-3\">\n                            {errors.name && errors.name.message ? (\n                                <small className=\"text-danger\">{errors.name && errors.name.message}</small>\n                            ) : <small className=\"text-white\">Project Name</small>\n                            }\n\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                className=\"form-control shadow-none\"\n                                ref={register({\n                                    required: \"Project Name is required\",\n                                })}\n                            />\n                        </div>\n\n                        <div className=\"form-group mb-3\">\n                            {errors.framework && errors.framework.message ? (\n                                <small className=\"text-danger\">{errors.framework && errors.framework.message}</small>\n                            ) : <small className=\"text-white\">Framework</small>\n                            }\n\n                            <select\n                                name=\"framework\"\n                                className=\"form-control shadow-none pl-1\" ref={register({\n                                    required: \"Framework is required\",\n                                })}\n                            >\n                                <option defaultValue>Select a framework</option>\n                                <option value=\"react\">React.js</option>\n                                <option value=\"vue\">Vue.js</option>\n                                <option value=\"laravel\">Laravel</option>\n                            </select>\n                        </div>\n\n                        <div className=\"form-group mb-3\">\n                            {errors.live_link && errors.live_link.message ? (\n                                <small className=\"text-danger\">{errors.live_link && errors.live_link.message}</small>\n                            ) : <small className=\"text-white\">Live Link</small>\n                            }\n\n                            <input\n                                type=\"text\"\n                                name=\"live_link\"\n                                className=\"form-control shadow-none\"\n                                ref={register({\n                                    required: \"Live link is required\",\n                                })}\n                            />\n                        </div>\n\n                        <div className=\"form-group mb-3\">\n                            {errors.repo_link && errors.repo_link.message ? (\n                                <small className=\"text-danger\">{errors.repo_link && errors.repo_link.message}</small>\n                            ) : <small className=\"text-white\">Repository Link</small>\n                            }\n\n                            <input\n                                type=\"text\"\n                                name=\"repo_link\"\n                                className=\"form-control shadow-none\"\n                                ref={register({\n                                    required: \"Repository link is required\",\n                                })}\n                            />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn btn-block shadow-none btn-dark\">\n                            {loading ? (\n                                <p className=\"mb-0\"><i className=\"fa fa-spinner text-white mr-2 fa-spin\"></i>Adding ...</p>\n                            ) : <p className=\"mb-0\">Submit</p>\n                            }\n                        </button>\n                    </form>\n                </Modal.Body>\n            </Modal>\n        </div>\n    );\n};\n\nexport default Dashboard;","import React, { useEffect, useState } from 'react';\nimport './style.css';\nimport axios from 'axios';\nimport URL from '../Url';\nimport { useForm } from \"react-hook-form\";\n\nconst Edit = (props) => {\n    const [data, setData] = useState(\"\")\n    const { register, handleSubmit, errors } = useForm();\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        fetchProject()\n    }, [])\n\n    // fetch project\n    const fetchProject = () => {\n        // Header \n        const header = {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\n            }\n        }\n        axios.get(`${URL}/project/${props.match.params.id}`, header)\n            .then(res => {\n                setData(res.data.project)\n            })\n            .catch(err => {\n                if (err) {\n                    console.log(err)\n                }\n            })\n    }\n\n    // Update Project\n    const onSubmit = data => {\n        setLoading(true)\n        // Header \n        const header = {\n            headers: {\n                Authorization: \"Bearer \" + localStorage.getItem(\"access_token\")\n            }\n        }\n        axios.put(`${URL}project/${props.match.params.id}`, data, header)\n            .then(res => {\n                if (res.status === 200) {\n                    fetchProject()\n                    setLoading(false)\n                }\n            })\n            .catch(err => {\n                if (err) {\n                    console.log(err)\n                }\n            })\n    }\n\n    return (\n        <div className=\"edit\">\n            <div className=\"flex-center flex-column\">\n                <div className=\"card\">\n                    <div className=\"card-body p-4 p-lg-5\">\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <div className=\"form-group mb-3\">\n                                {errors.name && errors.name.message ? (\n                                    <small className=\"text-danger\">{errors.name && errors.name.message}</small>\n                                ) : <small className=\"text-white\">Project Name</small>\n                                }\n\n                                <input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    defaultValue={data.name}\n                                    className=\"form-control shadow-none\"\n                                    ref={register({\n                                        required: \"Project Name is required\",\n                                    })}\n                                />\n                            </div>\n\n                            <div className=\"form-group mb-3\">\n                                {errors.framework && errors.framework.message ? (\n                                    <small className=\"text-danger\">{errors.framework && errors.framework.message}</small>\n                                ) : <small className=\"text-white\">Framework</small>\n                                }\n\n                                <select\n                                    name=\"framework\"\n                                    className=\"form-control shadow-none pl-1\" ref={register({\n                                        required: \"Framework is required\",\n                                    })}\n                                >\n                                    <option defaultValue={data.framework}>{data.framework}</option>\n                                    <option value=\"react\">React.js</option>\n                                    <option value=\"vue\">Vue.js</option>\n                                    <option value=\"laravel\">Laravel</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-group mb-3\">\n                                {errors.live_link && errors.live_link.message ? (\n                                    <small className=\"text-danger\">{errors.live_link && errors.live_link.message}</small>\n                                ) : <small className=\"text-white\">Live Link</small>\n                                }\n\n                                <input\n                                    type=\"text\"\n                                    name=\"live_link\"\n                                    defaultValue={data.live_link}\n                                    className=\"form-control shadow-none\"\n                                    ref={register({\n                                        required: \"Live link is required\",\n                                    })}\n                                />\n                            </div>\n\n                            <div className=\"form-group mb-3\">\n                                {errors.repo_link && errors.repo_link.message ? (\n                                    <small className=\"text-danger\">{errors.repo_link && errors.repo_link.message}</small>\n                                ) : <small className=\"text-white\">Repository Link</small>\n                                }\n\n                                <input\n                                    type=\"text\"\n                                    name=\"repo_link\"\n                                    defaultValue={data.repo_link}\n                                    className=\"form-control shadow-none\"\n                                    ref={register({\n                                        required: \"Repository link is required\",\n                                    })}\n                                />\n                            </div>\n\n                            <button type=\"submit\" className=\"btn btn-block shadow-none btn-dark\">\n                                {loading ? (\n                                    <p className=\"mb-0\"><i className=\"fa fa-spinner text-white mr-2 fa-spin\"></i>Updating...</p>\n                                ) : <p className=\"mb-0\">Update</p>\n                                }\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Edit;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport PrivateRoute from './utils/PrivateRoute';\n\nimport Master from './pages/Master';\nimport Login from './pages/Admin/Login';\nimport Dashboard from './pages/Admin/Dashboard';\nimport Edit from './pages/Admin/Edit';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={Master} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/edit/:id\" component={Edit} />\n            <Route component={Master} />\n          </Switch>\n        </div>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}